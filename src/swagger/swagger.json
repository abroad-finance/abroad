{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"TransactionStatusResponse": {
				"properties": {
					"transactionId": {
						"type": "string"
					},
					"status": {
						"type": "string",
						"enum": [
							"pending",
							"completed",
							"canceled"
						]
					}
				},
				"required": [
					"transactionId",
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CancelTransactionResponse": {
				"properties": {
					"transactionId": {
						"type": "string"
					},
					"status": {
						"type": "string",
						"enum": [
							"canceled"
						],
						"nullable": false
					}
				},
				"required": [
					"transactionId",
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"QuoteResponse": {
				"properties": {
					"value": {
						"type": "number",
						"format": "double"
					},
					"expiration_time": {
						"type": "number",
						"format": "double"
					},
					"quote_id": {
						"type": "string"
					}
				},
				"required": [
					"value",
					"expiration_time",
					"quote_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Currency": {
				"enum": [
					"COP"
				],
				"type": "string"
			},
			"PaymentMethod": {
				"enum": [
					"NEQUI"
				],
				"type": "string"
			},
			"CryptoCurrency": {
				"enum": [
					"USDC"
				],
				"type": "string"
			},
			"Network": {
				"enum": [
					"STELLAR"
				],
				"type": "string"
			},
			"QuoteRequest": {
				"properties": {
					"amount": {
						"type": "number",
						"format": "double"
					},
					"target_currency": {
						"$ref": "#/components/schemas/Currency"
					},
					"payment_method": {
						"$ref": "#/components/schemas/PaymentMethod"
					},
					"crypto_currency": {
						"$ref": "#/components/schemas/CryptoCurrency"
					},
					"network": {
						"$ref": "#/components/schemas/Network"
					}
				},
				"required": [
					"amount",
					"target_currency",
					"payment_method",
					"crypto_currency",
					"network"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AcceptQuoteResponse": {
				"properties": {
					"transactionId": {
						"type": "string"
					}
				},
				"required": [
					"transactionId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AcceptQuoteRequest": {
				"properties": {
					"quote_id": {
						"type": "string"
					}
				},
				"required": [
					"quote_id"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "abroad",
		"version": "1.0.0",
		"license": {
			"name": "ISC"
		},
		"contact": {}
	},
	"paths": {
		"/transaction/{transactionId}/status": {
			"get": {
				"operationId": "CheckTransactionStatus",
				"responses": {
					"200": {
						"description": "The status of the transaction.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TransactionStatusResponse"
								}
							}
						}
					}
				},
				"description": "Checks the status of a transaction by transaction ID.",
				"tags": [
					"Transaction"
				],
				"security": [],
				"parameters": [
					{
						"description": "The ID of the transaction to check.",
						"in": "path",
						"name": "transactionId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "The API key used for authentication.",
						"in": "header",
						"name": "X-API-KEY",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/transaction/{transactionId}/cancel": {
			"post": {
				"operationId": "CancelTransaction",
				"responses": {
					"200": {
						"description": "The updated status of the transaction.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CancelTransactionResponse"
								}
							}
						}
					}
				},
				"description": "Cancels a transaction by transaction ID.",
				"tags": [
					"Transaction"
				],
				"security": [],
				"parameters": [
					{
						"description": "The ID of the transaction to cancel.",
						"in": "path",
						"name": "transactionId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "The API key used for authentication.",
						"in": "header",
						"name": "X-API-KEY",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/quote": {
			"post": {
				"operationId": "CreateQuote",
				"responses": {
					"200": {
						"description": "A response object with the calculated value and the expiration time of the quote.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/QuoteResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"value": 500,
											"expiration_time": 1697041800,
											"quote_id": "123456"
										}
									}
								}
							}
						}
					}
				},
				"description": "Creates a quote for a cryptocurrency transaction based on the provided fiat amount and target currency.\nThis endpoint calculates the equivalent cryptocurrency value in USD for a specified amount of fiat currency (COP).\nThe response includes the quote value and expiration time.",
				"tags": [
					"Quote"
				],
				"security": [],
				"parameters": [
					{
						"description": "The API key used for authentication.",
						"in": "header",
						"name": "X-API-KEY",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "The request payload containing details about the transaction, including fiat amount, target currency, payment method, crypto currency, and network.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/QuoteRequest",
								"description": "The request payload containing details about the transaction, including fiat amount, target currency, payment method, crypto currency, and network."
							}
						}
					}
				}
			}
		},
		"/quote/accept": {
			"post": {
				"operationId": "AcceptQuote",
				"responses": {
					"200": {
						"description": "A response object with the generated transaction ID.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AcceptQuoteResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"transactionId": "txn_abc123"
										}
									}
								}
							}
						}
					}
				},
				"description": "Accepts a quote based on the provided quote_id and generates a transaction ID.",
				"tags": [
					"Quote"
				],
				"security": [],
				"parameters": [
					{
						"description": "The API key used for authentication.",
						"in": "header",
						"name": "X-API-KEY",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "The request payload containing the quote ID.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AcceptQuoteRequest",
								"description": "The request payload containing the quote ID."
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}