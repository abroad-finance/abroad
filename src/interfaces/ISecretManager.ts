// src/interfaces/ISecretManager.ts

export const Secrets = {
  // Binance related secrets
  BINANCE_API_KEY: 'BINANCE_API_KEY',
  BINANCE_API_SECRET: 'BINANCE_API_SECRET',
  BINANCE_API_URL: 'BINANCE_API_URL',

  // Bitso related secrets
  BITSO_API_KEY: 'BITSO_API_KEY',

  // Database related secrets
  DATABASE_URL: 'DATABASE_URL',

  // Movii related secrets
  MOVII_API_KEY: 'MOVII_API_KEY',
  MOVII_BASE_URL: 'MOVII_BASE_URL',
  MOVII_CLIENT_ID: 'MOVII_CLIENT_ID',
  MOVII_CLIENT_SECRET: 'MOVII_CLIENT_SECRET',
  MOVII_SIGNER_HANDLER: 'MOVII_SIGNER_HANDLER',

  // Nequi related secrets
  NEQUI_ACCESS_KEY: 'ACCESS_KEY_NEQUI',
  NEQUI_API_KEY: 'API_KEY_NEQUI',
  NEQUI_DISPERSION_CODE: 'DISPERSION_CODE_NEQUI',
  NEQUI_SECRET_KEY: 'SECRET_KEY_NEQUI',
  NEQUI_URL: 'URL_NEQUI',
  NEQUI_URL_AUTH: 'URL_NEQUI_AUTH',

  // Persona related secrets
  PERSONA_API_KEY: 'PERSONA_API_KEY',
  PERSONA_INQUIRY_TEMPLATE_ID: 'PERSONA_INQUIRY_TEMPLATE_ID',

  // RabbitMQ related secrets
  RABBITMQ_URL: 'RABBITMQ_URL',

  // Slack related secrets
  SLACK_WEBHOOK_URL: 'SLACK_WEBHOOK_URL',

  // Solana related secrets
  SOLANA_ADDRESS: 'SOLANA_ADDRESS',
  SOLANA_PRIVATE_KEY: 'SOLANA_PRIVATE_KEY',
  SOLANA_RPC_URL: 'SOLANA_RPC_URL',
  SOLANA_USDC_MINT: 'SOLANA_USDC_MINT',

  // Stellar related secrets
  STELLAR_ACCOUNT_ID: 'STELLAR_ACCOUNT_ID',
  STELLAR_HORIZON_URL: 'STELLAR_HORIZON_URL',
  STELLAR_PRIVATE_KEY: 'STELLAR_PRIVATE_KEY',
  STELLAR_USDC_ISSUER: 'STELLAR_USDC_ISSUER',
} as const

export interface ISecretManager {
  getSecret(secretName: Secret): Promise<string>
}

export type Secret = (typeof Secrets)[keyof typeof Secrets]
