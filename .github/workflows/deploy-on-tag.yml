name: Deploy on Tag (fast)

on:
  push:
    tags:
      - '*'

concurrency:
  group: deploy-on-tag-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      CI: true
    defaults:
      run:
        working-directory: abroad-ui
    steps:
      - name: Checkout (shallow)
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - id: check
        name: Verify tag commit is contained in main
        shell: bash
        run: |
          set -euo pipefail
          echo "Tag: ${GITHUB_REF#refs/tags/} -> $GITHUB_SHA"
          # Fetch just the latest main commit without tags
          git fetch --no-tags --depth=1 origin main
          if git merge-base --is-ancestor "$GITHUB_SHA" origin/main; then
            echo "on_main=true" >> "$GITHUB_OUTPUT"
            echo "Tag commit is contained in main. Proceeding."
          else
            echo "on_main=false" >> "$GITHUB_OUTPUT"
            echo "::notice::Tag commit is NOT contained in main. Skipping."
          fi

      - name: Setup Node.js
        if: steps.check.outputs.on_main == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Setup Bun
        if: steps.check.outputs.on_main == 'true'
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: '1.2.22'

      - name: Create .env for UI
        if: steps.check.outputs.on_main == 'true'
        env:
          UI_DOTENV: ${{ secrets.UI_DOTENV }}
        run: |
          set -euo pipefail
          if [ -z "${UI_DOTENV:-}" ]; then
            echo "::error::UI_DOTENV secret is not set or empty"
            exit 1
          fi
          # Write exact contents without extra newlines or interpolation
          printf "%s" "$UI_DOTENV" > .env

      - name: Install workspace deps
        if: steps.check.outputs.on_main == 'true'
        run: bun install --frozen-lockfile

      - name: Build UI
        if: steps.check.outputs.on_main == 'true'
        run: bun run build 
      - name: Deploy to Firebase Hosting
        if: steps.check.outputs.on_main == 'true'
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          projectId: ${{ secrets.FIREBASE_PROJECT_ID }}
          channelId: live
          entryPoint: abroad-ui
